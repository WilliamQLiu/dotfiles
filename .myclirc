# vi: ft=dosini
[main]

# Enables context sensitive auto-completion. If this is disabled the all
# possible completions will be listed.
smart_completion = True

# Multi-line mode allows breaking up the sql statements into multiple lines. If
# this is set to True, then the end of the statements must have a semi-colon.
# If this is set to False then sql statements can't be split into multiple
# lines. End of line (return) is considered as the end of the statement.
multi_line = True 

# Destructive warning mode will alert you before executing a sql statement
# that may cause harm to the database such as "drop table", "drop database"
# or "shutdown".
destructive_warning = True

# Skip intro info on startup
less_chatty = True

# log_file location.
log_file = ~/.mycli.log

# Default log level. Possible values: "CRITICAL", "ERROR", "WARNING", "INFO"
# and "DEBUG".
log_level = INFO

# Log every query and its results to a file. Enable this by uncommenting the
# line below.
# audit_log = ~/.mycli-audit.log

# Timing of sql statments and table rendering.
timing = True

# Table format. Possible values: psql, plain, simple, grid, fancy_grid, pipe,
# orgtbl, rst, mediawiki, html, latex, latex_booktabs, tsv.
# Recommended: psql, fancy_grid and grid.
table_format = psql

# Syntax Style. Possible values: manni, igor, xcode, vim, autumn, vs, rrt,
# native, perldoc, borland, tango, emacs, friendly, monokai, paraiso-dark,
# colorful, murphy, bw, pastie, paraiso-light, trac, default, fruity
#syntax_style = default
syntax_style = vim 

# Keybindings: Possible values: emacs, vi.
# Emacs mode: Ctrl-A is home, Ctrl-E is end. All emacs keybindings are available in the REPL.
# When Vi mode is enabled you can use modal editing features offered by Vi in the REPL.
#key_bindings = emacs
key_bindings = vi

# Enabling this option will show the suggestions in a wider menu. Thus more items are suggested.
wider_completion_menu = False

# MySQL prompt
# \t - Product type (Percona, MySQL, Mariadb)
# \u - Username
# \h - Hostname of the server
# \d - Database name
# \n - Newline
#prompt = '\t \u@\h:\d> '
prompt ="(\u@\h) [\d]> "

# Custom colors for the completion menu, toolbar, etc.
[colors]
# Completion menus.
Token.Menu.Completions.Completion.Current = 'bg:#00aaaa #000000'
Token.Menu.Completions.Completion = 'bg:#008888 #ffffff'
Token.Menu.Completions.MultiColumnMeta = 'bg:#aaffff #000000'
Token.Menu.Completions.ProgressButton = 'bg:#003333'
Token.Menu.Completions.ProgressBar = 'bg:#00aaaa'

# Selected text.
Token.SelectedText = '#ffffff bg:#6666aa'

# Search matches. (reverse-i-search)
Token.SearchMatch = '#ffffff bg:#4444aa'
Token.SearchMatch.Current = '#ffffff bg:#44aa44'

# The bottom toolbar.
Token.Toolbar.Off = 'bg:#222222 #888888'
Token.Toolbar.On = 'bg:#222222 #ffffff'

# Search/arg/system toolbars.
Token.Toolbar.Search = 'noinherit bold'
Token.Toolbar.Search.Text = 'nobold'
Token.Toolbar.System = 'noinherit bold'
Token.Toolbar.Arg = 'noinherit bold'
Token.Toolbar.Arg.Text = 'nobold'

# Favorite queries.
[favorite_queries]

# Do not use a pager
skip-pager=on

show_user_access = show grants for dbadmin
show_character_encoding_database = "show variables like 'character_set_database'"
simple_join = '''update some_database.some_table a
join some_database.some_other_table b on a.id = b.id
set a.some_status=0'''
communty_by_loc_city = '''
select count(*), t1.loc_city from idx.mlslv4_master t1 join enterprise.community t2 where t1.loc_city = t2.name and t2.owner_id=44 group by t1.loc_city'''
describe_table = '''select COLUMN_NAME as 'Field',
       COLUMN_TYPE    as 'Type',
       IS_NULLABLE    as 'Null',
       COLUMN_KEY     as 'Key',
       COLUMN_DEFAULT as 'Default',
       EXTRA          as 'Extra'
    from INFORMATION_SCHEMA.COLUMNS
        where TABLE_NAME   = 'my_table' and
              TABLE_SCHEMA = 'my_database''''
insert_with_select = "insert into my_db.my_table (field1, field2, field3, field4) (select 10, field2, field3, 20 from my_db.another_table)"
simple_insert = "inserto into my_db.my_table (field1, field2, field3) values (1, 2, 3)"
SHOW = "FULL TABLES IN database_name WHERE TABLE_TYPE LIKE 'VIEW'"
show_full_process_list = show full processlist
set_bit_after_time = "UPDATE my_table SET newly_reduced_bit = 0 where newly_reduced_bit = 1 and date_price_changed < DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)"
show_innodb_status = SHOW ENGINE INNODB STATUS
show_all_views = "show full tables in database_name where table_type like 'VIEW'"
show_primary_keys = "SHOW KEYS FROM table WHERE Key_name = 'PRIMARY'"
show_replication_status = SHOW SLAVE STATUS
show_indexes = show index from my_db.my_table
drop_index = alter table my_db.my_table drop index my_index
create_unique_index = create unique index my_index on my_db.my_table (my_column)
insert_ignore_table = insert ignore my_second_table (select * from my_first_table)
rename_table = rename table my_old_table_name to my_new_table_name
get_table_sizes = '''select TABLE_NAME as `table`, round((DATA_LENGTH + INDEX_LENGTH) / 1024 / 1024) AS `Size (MB)`
FROM information_schema.TABLES
WHERE TABLE_SCHEMA = 'idx'
ORDER BY (DATA_LENGTH + INDEX_LENGTH)
DESC'''
